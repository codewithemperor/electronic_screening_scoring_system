"ert>)\n                }\n\n                <DialogFooter>\n                  <Button variant=\"outline\" onClick={() => setIsDialogOpen(false)}>\n                    Cancel\n                  </Button>\n                  <Button \n                    onClick={editingLga ? handleUpdateLga : handleCreateLga}\n                    className=\"electric-glow\"\n                  >\n                    {editingLga ? 'Update LGA' : 'Create LGA'}\n                  </Button>\n                </DialogFooter>\n              </DialogContent>\n            </Dialog>\n          </div>\n        </div>\n\n        <div className=\"container mx-auto px-4 py-8\">\n          {error && (\n            <Alert className=\"mb-6\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n\n          {/* Search Bar */}\n          <div className=\"mb-6\">\n            <div className=\"relative max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n              <Input\n                placeholder=\"Search LGAs by name, code, or state...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n          </div>\n\n          {/* LGAs Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {filteredLgas.map((lga) => (\n              <Card key={lga.id} className=\"electric-border hover:shadow-lg transition-shadow\">\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <CardTitle className=\"text-lg\">{lga.name}</CardTitle>\n                      <CardDescription>{lga.code}</CardDescription>\n                    </div>\n                    <Building className=\"h-5 w-5 text-muted-foreground\" />\n                  </div>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-muted-foreground\">State:</span>\n                      <span className=\"font-medium\">{lga.state.name}</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-muted-foreground\">Candidates:</span>\n                      <span className=\"font-medium\">{lga._count.candidates}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"flex space-x-2 pt-2\">\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\" \n                      className=\"flex-1\"\n                      onClick={() => openEditDialog(lga)}\n                    >\n                      <Edit className=\"mr-1 h-3 w-3\" />\n                      Edit\n                    </Button>\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\"\n                      onClick={() => handleDeleteLga(lga.id)}\n                      disabled={lga._count.candidates > 0}\n                      className={lga._count.candidates > 0 ? 'opacity-50 cursor-not-allowed' : ''}\n                    >\n                      <Trash2 className=\"mr-1 h-3 w-3\" />\n                      Delete\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {filteredLgas.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Building className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No LGAs found</h3>\n              <p className=\"text-gray-600 mb-4\">\n                {searchTerm \n                  ? 'No LGAs match your search criteria.' \n                  : selectedState \n                    ? `No LGAs found for ${selectedState.name} state.`\n                    : 'Get started by adding your first LGA.'\n                }\n              </p>\n              {!searchTerm && (\n                <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n                  <DialogTrigger asChild>\n                    <Button className=\"electric-glow\" onClick={resetForm}>\n                      <Plus className=\"mr-2 h-4 w-4\" />\n                      Add LGA\n                    </Button>\n                  </DialogTrigger>\n                </Dialog>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </AdminSidebarLayout>\n  );\n}"